"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

https://projecteuler.net/problem=2
"""


def sum_of_evens_in_fibonacci(max_val):
    """
    Sums all of the even values in the fibonacci sequence up to the max value (inc.)

    :param int max_val: consider terms up to this value (inc.)
    :rtype: int
    :return: sum of evens in sequence
    """

    previous = 1
    current = 1

    sum_of_evens = 0

    while current <= max_val:
        if not current % 2:
            sum_of_evens += current
        new_current = previous + current
        previous = current
        current = new_current

    return sum_of_evens
